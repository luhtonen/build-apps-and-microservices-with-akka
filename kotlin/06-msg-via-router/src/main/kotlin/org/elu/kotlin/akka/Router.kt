/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.elu.kotlin.akka

import akka.actor.AbstractActor
import akka.actor.ActorRef
import akka.actor.ActorSystem
import akka.actor.Props
import akka.japi.pf.ReceiveBuilder
import kotlin.random.Random

class Router : AbstractActor() {
  private lateinit var routees: List<ActorRef>

  override fun preStart() {
    routees = List(5) {
      context.actorOf(Props.create(Worker::class.java))
    }
  }

  override fun createReceive(): Receive =
      ReceiveBuilder()
          .match(Work::class.java, this::onMessage)
          .build()

  private fun onMessage(msg: Work) {
    println("I'm Router and I received a message...")
    routees[Random.nextInt(routees.size)].forward(msg, context)
  }
}

fun main() {
  val system = ActorSystem.create("router")

  val router = system.actorOf(Props.create(Router::class.java))

  router.tell(Work(), ActorRef.noSender())
  router.tell(Work(), ActorRef.noSender())
  router.tell(Work(), ActorRef.noSender())
  router.tell(Work(), ActorRef.noSender())

  Thread.sleep(100)
  system.terminate()
}
